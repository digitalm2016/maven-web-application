pipeline{
    agent any
    tools {
  maven 'maven3.9.6'
}
triggers {
  pollSCM '* * * * *'
}
options {
  timestamps()
  buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')
}
    stages{
        stage('CheckOutCode'){
            steps{
                slackNotification("STARTED")
                git branch: 'development', credentialsId: 'b305d05b-cea0-40b1-b11d-222dd32ff35a', url: 'https://github.com/digitalm2016/maven-web-application.git'
            }
        }
        stage('build'){
            steps{
            sh "mvn clean package"
            }
        }
        stage('ExcecuteSorarqubeReport'){
        steps{
            sh "mvn clean sonar:sonar"
        }
    }
    stage('UploadArtifactIntoNexus'){
        steps{
        sh "mvn clean deploy"
        }
    }
        stage('DeployAppIntoTomcatserver'){
            steps{
         sshagent(['e78d991e-c76b-46c0-aa8b-9888ec3bb8b9']) {
        sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.8.97:/opt/apache-tomcat-9.0.85/webapps/"
      }
         }
    }
    }//stages closing
    post {
  success {
      slackNotification(currentBuild.result)
    // One or more steps need to be included within each condition's block.
  }
  failure {
      slackNotification(currentBuild.result)
    // One or more steps need to be included within each condition's block.
  }
}
}//pipelline closing
def slackNotification(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
